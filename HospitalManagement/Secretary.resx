<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>