<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>