<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>